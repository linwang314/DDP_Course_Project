install.packages("KernSmooth")
install.packages("KernSmooth")
library(KernSmooth)
remove.packages(kernSmooth)
remove.packages("kernSmooth")
remove.packages("KernSmooth", "C:/Program Files/R/R-3.2.1/library")
library(KernSmooth)
clear
add2<-function(x,y) {x+y}
add2(3,5)
getwd()
cube <- function(x,n){
x^3
}
cube(3)
x <- 1:10
if (x>5) {
x <- 0
}
x
x <- 1:10
if (x<5) {
x <- 0
}
<<x
x
f <- function(x) {
g <- function(y){
y+z
}
z <- 4
x + g(x)
}
z<-10
f(3)
parent.frame()
ls()
rm(ls())
rm(list=ls())
getwd()
"knitr" %in% names(installed.packages())
install.packages("knitr")
?show
?predict
?dgamma
?colSums
?mean
?lm
"shiny" %in% installed.packages()
"shinyapp" %in% installed.packages()
"shinyapps" %in% installed.packages()
library(shiny)
runExample("01_hello")
getwd()
dir.create("App-1")
runApp("App-1")
runApp("App-1")
runApp("App-1", display.mode = "showcase")
shiny::runApp('App-1')
system.file("example", package = "shiny")
system.file("examples", package = "shiny")
?system.file
ls(system.file("examples", package = "shiny"))
list.files(system.file("examples", package = "shiny"))
runApp("App_1")
runApp("App-1")
runApp("App-1")
runApp("App-1")
dir.create("App-1/www")
download.file("http://shiny.rstudio.com/tutorial/lesson2/www/bigorb.png", destfile = "App-1/www/bigorb.png")
download.file("http://shiny.rstudio.com/tutorial/lesson2/www/bigorb.png", destfile = "App-1/www/bigorb.png", mode = "wb")
?img
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
?selectInput
shiny::runApp('App-1')
shiny::runApp('App-1')
shiny::runApp('App-1')
?dir.rename
apropos('rename')
?file.rename
shiny::runApp('App-1')
dir.create("census-app/data")
install.packages(c("maps", "mapproj"))
source("census/helpers.R")
source("census-app/helpers.R")
color()
colors()
shiny::runApp('census-app')
shiny::runApp('census-app')
shiny::runApp('census-app')
shiny::runApp('census-app')
shiny::runApp('census-app')
data(countyMapEnv)
str(countyMapEnv)
counties <- read.rds("census-app/data/counties.rds")
counties <- read.RDS("census-app/data/counties.rds")
counties <- readRDS("census-app/data/counties.rds")
producedwater <- read.csv("c:/users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/USGS_Produced_Waters")
producedwater <- read.csv("C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/USGS_Produced_Waters")
producedwater <- read.csv("C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/USGS_Produced_Waters.csv")
"state" %in% names(producedwater)
"State" %in% names(producedwater)
names(producedwater)[1:10]
names(producedwater)[1:20]
"TDS" %in% names(producedwater)
library(dplyr)
str(producedwater)
pw <- producedwater %>% select(STATE, COUNTY, WELLTYPE, TDS) %>% mutate(location = paste(STATE, COUNTY, sep = ","))
length(unique(pw$location))
pw <- producedwater %>% select(STATE, COUNTY, WELLTYPE, TDS) %>% arrange(STATE, COUNTY) %>% mutate(location = paste(STATE, COUNTY, sep = ","))
head(pw)
getwd()
energy <- read.csv("C:/Users/linwa_000/Downloads/MET_T01_01.csv")
energy <- read.csv("C:/Users/linwa_000/Downloads/MER_T01_01.csv")
summary(energy)
table(energy$Description)
580*12
"tidyr" %in% names(installed.packages())
install.packages('tidyr')
library(tidyr)
?separate
?split
?spread
energy_wide <- spread(data = energy, key = Description, value = Value)
head(energy_wide)
?cast
install.packages("reshape2")
library(reshape2)
?cast
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description + Value)
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = Value)
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = energy$Value
)
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = guess_value(Value))
?guess_value
name(energy_cast[1:10])
names(energy_cast[1:10])
names(energy_wide)
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = guess_value(energy$Value))
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, guess_value(energy$Value))
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = energy$Value)
energy_cast <- dcast(data = energy, formula = YYYYMM ~ Description, value.var = Value)
rm(energy_cast)
library(dplyr)
energy_wide <- energy %>% select(Value, Description) %>% spread(Description, Value)
?split?
?split
rm(energy_wide)
table(description)
table(energy$Description)
str(energy)
library(lubridate)
ym(194901)
?as.Date
as.Date(194901, "%Y%m")
as.Date(194901, "%Y-%m")
separate(energy, YYYYMM, c("year", "month"), sep = 4)
library(shiny)
library(ggplot2)
library(lubridate)
library(dplyr)
library(tidyr)
energy_raw <- read.csv("C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/
MER_T01_01.csv")
energy <- energy_raw %>%
separate(YYYYMM, c("month", "year"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == 13)
energy_raw <- read.csv("C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/MER_T01_01.csv")
energy_raw <- read.csv(
"C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/MER_T01_01.csv")
energy <- energy_raw %>%
separate(YYYYMM, c("month", "year"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == 13)
energy <- energy_raw %>%
separate(YYYYMM, c("month", "year"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == 13L)
str(energy_raw)
str(energy)
energy <- energy_raw %>%
separate(YYYYMM, c("month", "year"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == "13")
energy <- energy_raw %>%
separate(YYYYMM, c("year", "month"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == "13")
table(energy$Description)
energy$mon <- factor(energy$month, levels = month.name)
head(energy)
as.numeric("01")
energy$mon <- factor(as.numeric(energy$month), levels = month.name)
head(energy)
energy$month <- as.numeric(energy$month)
head(energy)
energy$mon <- factor(energy$month, levels = month.name)
head(energy)
?factor
month.name
energy$mon <- factor(energy$month, levels = 1:12, labels = month.name)
head(energy)
years(system.Date)
years(system.Date())
system.Date()
system.time()
energy_by_type <- split(energy$Value, energy$Description)
str(energy_by_type)
?as.yearmon
install.packages("zoo")
library(zoo)
?as.yearmon
energy_raw$YYYYMM <- as.yearmon(as.numeric(energy_raw$YYYYMM))
head(energy_raw)
energy_raw$YYYYMM <- as.yearmon(as.numeric(energy_raw$YYYYMM))
head(energy_raw)
energy_raw <- read.csv(
"C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/MER_T01_01.csv")
energy_raw$YYYYMM <- as.yearmon(energy_raw$YYYYMM)
head(energy)
head(energy_raw)
energy_raw <- read.csv(
"C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/MER_T01_01.csv")
energy_raw$YYYYMM <- as.yearmon(as.character(energy_raw$YYYYMM))
head(energy_raw)
head
as.yearmon("199702")
as.yearmon("1997-2")
energy$date <- as.yearmon(paste(energy$year, energy$month, sep = "-"))
head(energy)
table(energy$Description)
energy_tidy <- data.frame(date = energy$date[1:514])
length(energy_by_type)
names(energy_by_type)
for (i in 1:length(energy_by_type)) {
energy_tidy$names(energy_by_type)[i] <- energy_by_type[[i]]
}
for (i in 1:length(energy_by_type)) {
energy_tidy[ ,i+1] <- energy_by_type[[i]]
}
names(energy_tidy) <- names(energy_by_type)
head(energy_tidy)
energy_tidy <- data.frame(date = energy$date[1:514])
for (i in 1:length(energy_by_type)) {
energy_tidy[ ,i+1] <- energy_by_type[[i]]
}
head(energy_tidy)
names(energy_tidy)[2:13] <- names(energy_by_type)
str(energy_raw)
as.factor("b", "a")
as.factor(c("b", "a"))
energy_raw <- read.csv(
"C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project/MER_T01_01.csv",
stringsAsFactors = FALSE)
unique(energy_raw$Description)
energy_raw$Description <- factor(energy_raw$Description, levels = unique(energy_raw$Description),
levels = unique(energy_raw$Description))
energy_raw$Description <- factor(energy_raw$Description, levels = unique(energy_raw$Description),
labels = unique(energy_raw$Description))
str(energy_raw)
energy <- energy_raw %>%
separate(YYYYMM, c("year", "month"), 4)  %>%
select(year, month, Description, Value)  %>%
filter(!month == "13")
energy$month <- as.numeric(energy$month)
energy$mon <- factor(energy$month, levels = 1:12, labels = month.name)
energy$date <- as.yearmon(paste(energy$year, energy$month, sep = "-"))
energy_by_type <- split(energy$Value, energy$Description)
energy_tidy <- data.frame(date = energy$date[1:514])
for (i in 1:length(energy_by_type)) {
energy_tidy[ ,i+1] <- energy_by_type[[i]]
}
names(energy_tidy)[2:13] <- names(energy_by_type)
head(energy_clean)
head(energy_tidy)
library(shiny)
?sliderInput()
class(as.yearmon("2007-01"))
as.yearmon("2007-01"))
as.yearmon("2007-01")
a <- as.yearmon("2007-01")
b <- as.yearmon("2007-02")
a < b
b <- as.yearmon("2008-02")
a <b
a>b
summary(energy_tidy$date)
min(energy_tidydate)
min(energy_tidy$date)
max(energy_tidy$date)
library(ggplot2)
?qplot
library(reshape2)
?melt
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
shiny::runApp('C:/Users/linwa_000/Dropbox/Coursera_Data Science Specialization/09 Developing Data Product/Course Project')
getwd()
scale_x_continuous(limits = c(1950, 2010))
setwd("C:/Users/linwa_000/DDP_Course_Project/Course_Project_Presentation")
library(slidify)
slidify(index.md)
slidify(index.Rmd)
slidify('index.Rmd')
slidify('index.Rmd')
slidify('index.Rmd')
library(knitr)
browseURL('index.html')
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
getwd()
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
rm(list = ls())
slidify(index.Rmd)
slidify('index.Rmd')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
slidify('index.Rmd')
browseURL('index.html')
publish(user="linwang929", repo="DDP_Course_Project")
publish(title = 'DDP_Course_Project', 'index.html', host = 'rpubs')
?publish
publish_rpubs(title = 'DDP_Course_Project', 'index.html')
